version: "3.7"

networks:
  default:

volumes:
  plex:
  jellyfin:
  nzbget:
  sonarr:
  radarr:
  nzbhydra:
  ombi:
  duplicati:
  traefik:

services:
  # https://docs.linuxserver.io/images/docker-plex
  plex:
    image: ghcr.io/linuxserver/plex@sha256:2672ba172d8f7d0326db3da0ce703ca9eda8fe016fd19209a43117dff3a9d209
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      PLEX_CLAIM: "${PLEX_CLAIM}"
    networks:
      - default
    volumes:
      - "plex:/config"
      - "${MEDIA_DIR}:/media"
      - "/tmp:/tmp"

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    image: ghcr.io/linuxserver/jellyfin@sha256:131f3ae86a281d32aa084070484c336466871eff642b86f81498e9ad308990ca
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      JELLYFIN_PublishedServerUrl: "${JELLYFIN_HOST}"
    networks:
      - default
    volumes:
      - "jellyfin:/config"
      - "${MEDIA_DIR}:/media"

  # https://docs.linuxserver.io/images/docker-nzbget
  nzbget:
    image: ghcr.io/linuxserver/nzbget@sha256:e9408703e4378f61d7c4dc0948620f3b2a5b2c00cd87b82c55e84f8634affcc8
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbget:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    image: ghcr.io/linuxserver/sonarr@sha256:be35fcfc1cf01e5ad4fd8a4f05555db3e52d45914264b0327a8b289e43315cef
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "sonarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    image: ghcr.io/linuxserver/radarr@sha256:45ef9e7040e4ff622b37c2408ad8edfdb67ab9eb3e34570ff0f288df200e9db1
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "radarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    image: ghcr.io/linuxserver/nzbhydra2@sha256:4dd9ce3eeef61abe24fd08de2aada126b8ebd64fb2de3ef7b66e544a3aa835bb
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbhydra:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    image: ghcr.io/linuxserver/ombi@sha256:8358b4c03014ca92b09e89d84d995075d25311f5b0f299284f8db76df501b542
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ombi:/config
    networks:
      - default
    links:
      - sonarr
      - radarr
      - plex

  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    image: ghcr.io/linuxserver/duplicati@sha256:6709dd5dd7f9eee789d2eb9eed649396452db81b4fc7a74a2b640a03a495ca0b
    restart: unless-stopped
    environment:
      PUID: 0
      PGID: 0
      TZ: ${TZ}
    volumes:
      - duplicati:/config:rw
      - plex:/sources/plex:rw
      - nzbget:/sources/nzbget:rw
      - sonarr:/sources/sonarr:rw
      - radarr:/sources/radarr:rw
      - nzbhydra:/sources/nzbhydra:rw
      - ombi:/sources/ombi:rw
      - traefik:/sources/traefik:rw
    networks:
      - default

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata@sha256:c6372281575d3a39465b65f871c37b75456deaba7e483522b5e2645758b8d610
    restart: unless-stopped
    hostname: ${NETDATA_HOST}
    environment:
      PGID: ${DOCKER_PGID}
      TZ: ${TZ}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
