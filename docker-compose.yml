version: "3.7"

networks:
  default:

volumes:
  plex:
  jellyfin:
  nzbget:
  sonarr:
  radarr:
  nzbhydra:
  ombi:
  duplicati:
  traefik:

services:
  # https://docs.linuxserver.io/images/docker-plex
  plex:
    image: ghcr.io/linuxserver/plex@sha256:78d3ee093608e07557c9c439d6768b301a4f7f04bf4d3427406363d0591ae6b7
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      PLEX_CLAIM: "${PLEX_CLAIM}"
    networks:
      - default
    volumes:
      - "plex:/config"
      - "${MEDIA_DIR}:/media"
      - "/tmp:/tmp"

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    image: ghcr.io/linuxserver/jellyfin@sha256:4db18d56cfece3204e745a93b8690759c10ef48380c29e1dffa78ed95e4a651c
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      JELLYFIN_PublishedServerUrl: ${JELLYFIN_HOST}
    networks:
      - default
    volumes:
      - "jellyfin:/config"
      - "${MEDIA_DIR}:/media"

  # https://docs.linuxserver.io/images/docker-nzbget
  nzbget:
    image: ghcr.io/linuxserver/nzbget@sha256:3021724f9ef9166fdebd5441d6bae1fc3c3b1c4b8be87b907588fc81b9fb0868
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbget:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    image: ghcr.io/linuxserver/sonarr@sha256:1c726833b7ab176e43b57225e5b41f44574b4b53030a44be5a5dcebaa1944235
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "sonarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    image: ghcr.io/linuxserver/radarr@sha256:23781553c0c9209a28fb0a439add7bd01cd03e022f3d7b6e800ff20396ad1f4b
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "radarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    image: ghcr.io/linuxserver/nzbhydra2@sha256:bfec1be8fd06b8c95d8e5c5f279ad8763c002cc6f2e4ac234d4374e2bfd59938
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbhydra:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    image: ghcr.io/linuxserver/ombi@sha256:86f4af654e21b950efba9aa2df745cd79a88b9a9e164988b0c7c0189ef7b5857
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ombi:/config
    networks:
      - default
    links:
      - sonarr
      - radarr
      - plex

  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    image: ghcr.io/linuxserver/duplicati@sha256:36ce4f8e86789a5d9396959fad29ca32b716697cc567fd7310f040e9fde03d1d
    restart: unless-stopped
    environment:
      PUID: 0
      PGID: 0
      TZ: ${TZ}
    volumes:
      - duplicati:/config:rw
      - plex:/sources/plex:rw
      - nzbget:/sources/nzbget:rw
      - sonarr:/sources/sonarr:rw
      - radarr:/sources/radarr:rw
      - nzbhydra:/sources/nzbhydra:rw
      - ombi:/sources/ombi:rw
      - traefik:/sources/traefik:rw
    networks:
      - default

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata@sha256:3a6b93280f3c0ec6f76829ad97c92f72688ec6913240a0009686194e8708c351
    restart: unless-stopped
    hostname: ${NETDATA_HOST}
    environment:
      PGID: ${DOCKER_PGID}
      TZ: ${TZ}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
