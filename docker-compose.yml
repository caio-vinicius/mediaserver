version: "3.7"

networks:
  default:

volumes:
  plex:
  jellyfin:
  nzbget:
  sonarr:
  radarr:
  nzbhydra:
  ombi:
  duplicati:
  traefik:

services:
  # https://docs.linuxserver.io/images/docker-plex
  plex:
    image: ghcr.io/linuxserver/plex@sha256:78d3ee093608e07557c9c439d6768b301a4f7f04bf4d3427406363d0591ae6b7
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      PLEX_CLAIM: "${PLEX_CLAIM}"
    networks:
      - default
    volumes:
      - "plex:/config"
      - "${MEDIA_DIR}:/media"
      - "/tmp:/tmp"

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    image: ghcr.io/linuxserver/jellyfin@sha256:342d4e6212183754d01bb2fb2267a021a7673b112bbd28e4f9c3f88da140690a
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      JELLYFIN_PublishedServerUrl: "${JELLYFIN_HOST}"
    networks:
      - default
    volumes:
      - "jellyfin:/config"
      - "${MEDIA_DIR}:/media"

  # https://docs.linuxserver.io/images/docker-nzbget
  nzbget:
    image: ghcr.io/linuxserver/nzbget@sha256:3021724f9ef9166fdebd5441d6bae1fc3c3b1c4b8be87b907588fc81b9fb0868
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbget:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    image: ghcr.io/linuxserver/sonarr@sha256:7d13f50736661e60d4a3bedae9c3ee81f566d5d6a5a347e8f47d21a1ae97425b
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "sonarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    image: ghcr.io/linuxserver/radarr@sha256:23781553c0c9209a28fb0a439add7bd01cd03e022f3d7b6e800ff20396ad1f4b
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "radarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    image: ghcr.io/linuxserver/nzbhydra2@sha256:8240c107102b8285bdda2022bdf96c9be076d23cecafcc01a4bd0f4b9ddba30c
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbhydra:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    image: ghcr.io/linuxserver/ombi@sha256:fd104651ec9f86938235abd0ec1e576286a47fcda416b02a1f4aad1b468ba777
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ombi:/config
    networks:
      - default
    links:
      - sonarr
      - radarr
      - plex

  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    image: ghcr.io/linuxserver/duplicati@sha256:5bd8c83b2e91189df8195d76ccaa0a4cef0dae8f52f21aa4eec9fd114bd5c852
    restart: unless-stopped
    environment:
      PUID: 0
      PGID: 0
      TZ: ${TZ}
    volumes:
      - duplicati:/config:rw
      - plex:/sources/plex:rw
      - nzbget:/sources/nzbget:rw
      - sonarr:/sources/sonarr:rw
      - radarr:/sources/radarr:rw
      - nzbhydra:/sources/nzbhydra:rw
      - ombi:/sources/ombi:rw
      - traefik:/sources/traefik:rw
    networks:
      - default

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata@sha256:de9cad4f3df9a0490ca0f10062fe4a73525e9e1bd2abb70294d4aeb7bef20ce9
    restart: unless-stopped
    hostname: ${NETDATA_HOST}
    environment:
      PGID: ${DOCKER_PGID}
      TZ: ${TZ}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
