version: "3.7"

networks:
  default:

volumes:
  plex:
  jellyfin:
  nzbget:
  sonarr:
  radarr:
  nzbhydra:
  ombi:
  duplicati:
  traefik:

services:
  # https://docs.linuxserver.io/images/docker-plex
  plex:
    image: ghcr.io/linuxserver/plex@sha256:33c429acfad710e4ca584e5df1c0e4c0ac13b76eb75fd0b1c849d43f94127817
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      PLEX_CLAIM: "${PLEX_CLAIM}"
    networks:
      - default
    volumes:
      - "plex:/config"
      - "${MEDIA_DIR}:/media"
      - "/tmp:/tmp"

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    image: ghcr.io/linuxserver/jellyfin@sha256:ee4699b3489b9be10c9b4e4f6164c9230d97287a8c619dd030392c628a49efa2
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      JELLYFIN_PublishedServerUrl: "${JELLYFIN_HOST}"
    networks:
      - default
    volumes:
      - "jellyfin:/config"
      - "${MEDIA_DIR}:/media"

  # https://docs.linuxserver.io/images/docker-nzbget
  nzbget:
    image: ghcr.io/linuxserver/nzbget@sha256:5886b75a79daed25a96dbee02d57b94408a0b3027ed2e25ca5c8b4079dd762b9
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbget:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    image: ghcr.io/linuxserver/sonarr@sha256:86d10dd8f53cb8203a7bd103b1ddccdcf644127ac45f9505b9a84abf0e5ecf05
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "sonarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    image: ghcr.io/linuxserver/radarr@sha256:8fc05f0baa32d1e15104c9767eca72176a621f5d9d36df292a24d91fbd66e8cf
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "radarr:/config"
      - "${DOWNLOADS_DIR}:/downloads"
      - "${MEDIA_DIR}:/media"
    links:
      - nzbhydra
      - nzbget

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    image: ghcr.io/linuxserver/nzbhydra2@sha256:8240c107102b8285bdda2022bdf96c9be076d23cecafcc01a4bd0f4b9ddba30c
    restart: unless-stopped
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    networks:
      - default
    volumes:
      - "nzbhydra:/config"
      - "${DOWNLOADS_DIR}:/downloads"

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    image: ghcr.io/linuxserver/ombi@sha256:4faaa0ce335bd4984e71339d5d8595a27877729ae725eaa6bc95cf320aacf9b2
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ombi:/config
    networks:
      - default
    links:
      - sonarr
      - radarr
      - plex

  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    image: ghcr.io/linuxserver/duplicati@sha256:9abcf5c93f8d688a6ec73c38c25c40b9a21bde59bf1095ef41238a6552b35c4b
    restart: unless-stopped
    environment:
      PUID: 0
      PGID: 0
      TZ: ${TZ}
    volumes:
      - duplicati:/config:rw
      - plex:/sources/plex:rw
      - nzbget:/sources/nzbget:rw
      - sonarr:/sources/sonarr:rw
      - radarr:/sources/radarr:rw
      - nzbhydra:/sources/nzbhydra:rw
      - ombi:/sources/ombi:rw
      - traefik:/sources/traefik:rw
    networks:
      - default

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata@sha256:d58cb941849e8c7032e1196f1ac06a02df2ea83fbdc6eea46ba75851cd33b446
    restart: unless-stopped
    hostname: ${NETDATA_HOST}
    environment:
      PGID: ${DOCKER_PGID}
      TZ: ${TZ}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
