version: "3.7"

services:
  plex:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.plex.tls.certresolver: prod
      traefik.http.routers.plex.rule: Host(`${PLEX_HOST}`)
      traefik.http.services.plex_mediaserver.loadbalancer.server.port: 32400
      traefik.http.services.plex_mediaserver.loadbalancer.server.scheme: http

  nzbget:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.nzbget.rule: Host(`${NZBGET_HOST}`)
      traefik.http.routers.nzbget.tls.certresolver: prod
      traefik.http.routers.nzbget.middlewares: hsts-header, basicauth
      traefik.http.routers.nzbget-api.rule: Host(`${NZBGET_HOST}`) && PathPrefix(`/{jsonrpc:([^\/:]*:[^\/:]*/)?jsonrpc}`,`/{xmlrpc:([^\/:]*:[^\/:]*/)?xmlrpc}`)
      traefik.http.routers.nzbget-api.middlewares: hsts-header

  sonarr:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.sonarr.rule: Host(`${SONARR_HOST}`)
      traefik.http.routers.sonarr.tls.certresolver: prod
      traefik.http.routers.sonarr.middlewares: hsts-header, basicauth
      traefik.http.routers.sonarr-api.rule: Host(`${SONARR_HOST}`) && PathPrefix(`/api`)
      traefik.http.routers.sonarr-api.middlewares: hsts-header

  radarr:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.radarr.rule: Host(`${RADARR_HOST}`)
      traefik.http.routers.radarr.tls.certresolver: prod
      traefik.http.routers.radarr.middlewares: hsts-header, basicauth
      traefik.http.routers.radarr-api.rule: Host(`${RADARR_HOST}`) && PathPrefix(`/api`)
      traefik.http.routers.radarr-api.middlewares: hsts-header

  hydra:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.hydra.rule: Host(`${HYDRA_HOST}`)
      traefik.http.routers.hydra.tls.certresolver: prod
      traefik.http.routers.hydra.middlewares: hsts-header, basicauth
      traefik.http.routers.hydra-api.rule: Host(`${HYDRA_HOST}`) && PathPrefix(`/api`,`/getnzb`,`/gettorrent`,`/rss`,`/torznab/api`)
      traefik.http.routers.hydra-api.middlewares: hsts-header

  ombi:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.ombi.rule: Host(`${OMBI_HOST}`)
      traefik.http.routers.ombi.tls.certresolver: prod
      traefik.http.routers.ombi.middlewares: hsts-header

  duplicati:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.duplicati.rule: Host(`${DUPLICATI_HOST}`)
      traefik.http.routers.duplicati.tls.certresolver: prod
      traefik.http.routers.duplicati.middlewares: hsts-header, basicauth

  netdata:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.netdata.rule: Host(`${NETDATA_HOST}`)
      traefik.http.routers.netdata.tls.certresolver: prod
      traefik.http.routers.netdata.middlewares: hsts-header, basicauth

  traefik:
    ports:
      - "443:443/tcp"
    command:
      - "--log.level=INFO"
      - "--api=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.prod.acme.tlschallenge=true"
      - "--certificatesresolvers.prod.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.prod.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.prod.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.staging.acme.tlschallenge=true"
      - "--certificatesresolvers.staging.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.staging.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_traefik
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_HOST}`)
      traefik.http.routers.traefik.tls.certresolver: prod
      traefik.http.routers.traefik.middlewares: hsts-header, basicauth
      traefik.http.routers.traefik.service: api@internal
      traefik.http.middlewares.basicauth.basicauth.usersfile: /etc/traefik/.htpasswd
      traefik.http.middlewares.hsts-header.headers.customResponseHeaders.Strict-Transport-Security: "max-age=63072000"
